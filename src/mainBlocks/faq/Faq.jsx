import React from "react";
import css from "./Faq.module.css";
import TitleComponent from "../../dumbComponents/titleComponent/TitleComponent";
import FaqComponent from "../../smartComponents/faqComponent/FaqComponent";
const faqQuestion = [
  {
    question: "Чи потрібно підписувати контракт перед роботою?",
    answer: `Так, після обговорення плану роботи ми разом підписуємо контракт за допомогою цифрового підпису.Контракт регулює весь процес роботи, виплати, будь-які непередбачувані обставини та інші важливі частини проєкту. 
    
    Даний документ захищає обидві сторони – як замовника, так і виконавця.`,
  },
  {
    question: "Як проводиться оплата?",
    answer: `Є два варіанти оплати: повна передплата та поетапна передплата.Повна передплата передбачає переказ всієї суми за проєкт одразу на початку співпраці. Поетапна передплата передбачає оплату частинами за кожен етап (або декілька). До кожної платіжної операції прикріплюється інвойс (чек) з інформацією про оплачену послугу або етап.`,
  },
  {
    question: "Чи можна повернути кошти після оплати?",
    answer: `Так, можна.

Як це працює: в будь-якому випадку з суми повернення утримується 5% та комісія банку. Повертаються кошти лише за ті етапи проєкту, які не були розпочаті. Вся робота, яка була виконана та оплачена, надсилається замовнику. Етапи, які були розпочаті, завжди доводяться до кінця (за бажанням замовника).`,
  },
  {
    question: "Чи можна допрацювати вже наявний сайт?",
    answer: `Ні, лише створити сайт з нуля. Наявний сайт можна використати як приклад для дизайну, контенту та інш., проте це не передбачає зменшення вартості послуги.`,
  },
  {
    question: "Чи можна обрати тільки один етап, а не всю послугу?",
    answer: `Ні, можливе лише замовлення повноцінної послуги.

В деяких випадках, за бажанням замовника та попереднім обговоренням, можливе виключення 1-2 етапів з послуги. Вартість проєкту, який містить менше етапів роботи, зменшується.`,
  },
];
function Faq() {
  return (
    <section className={css.faqSection}>
      <TitleComponent text={"FAQ"} />
      {faqQuestion.map((item, index) => (
        <FaqComponent key={index} faqEl={item} />
      ))}
    </section>
  );
}

export default Faq;
